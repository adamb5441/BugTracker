@model BugTracker.Models.Ticket
@using BugTracker.Helpers
@{
                /**/

                ViewBag.Title = "Details";
}

<div class="container">
    <div class="col-md-8" style="margin-top: 20px">
        <div class="well row">
            <div style="display: flex">
                <h4>Ticket</h4>
                <h5 style="margin-left: auto">Priority: @Html.DisplayFor(model => model.TicketPriority.Name)</h5>
            </div>
            <hr />
            <div class="col-md-4">
                <p>Subitted by @(Model.OwnerUser.DisplayName) on @(Model.Created) for project @(Model.Project.Name)</p>
                <p>@Html.DisplayFor(model => model.Title)</p>
                <p>@Html.DisplayFor(model => model.Description)</p>

                <p>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
                </p>
            </div>
            <div class="col-md-4 col-md-offset-4">
                <p>@Html.DisplayFor(model => model.TicketStatus.Name)</p>
                <p>@Html.DisplayFor(model => model.TicketType.Name)</p>
            </div>
        </div>


        <h4>Comments</h4>
        @if (User.Identity.IsAuthenticated)
        {
            <div style="margin-top: 10px" class="row col-md-12">
                @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post, new { @class = "Form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("TicketId", Model.Id)

                    <div style="display: flex; justify-content: center; flex-direction:column; align-items: flex-start" class="form-group">

                        @Html.TextArea("CommentBody", new { @class = "comment", placeholder = "Add a comment", id = "txtarea" })

                        <div style="margin-top: 10px; display: flex; justify-content: space-around">
                            <button class="btn btn-default" id="cancel">Cancel</button>
                            <button style="margin-left: 10px" class="btn btn-primary" type="submit" value="submit">add</button>
                        </div>
                        <br />

                    </div>
                }
            </div>

        }

        @foreach (var comment in Model.TicketComments.OrderByDescending(b => b.Created))
        {
            <div class="col-md-10 panel panel-default">
                <div class="row ">
                    <div class="col-md-12" style="display: flex; margin-top: 5px">
                        <div style="margin: 5px; font-size: 25px">@comment.User.DisplayName</div>
                        @{
                            TimeSpan age = DateTimeOffset.Now.Subtract(comment.Created);
                            var str = age.ToString("%d");
                            if (str == "0")
                            {
                                str = "Posted today";
                            }
                            else
                            {
                                str = str + " day(s) ago";
                            }
                        }
                        <div style="margin: 5px">@str</div>
                    </div>
                </div>
                <div style="margin: 10px" class="row">
                    <div class="col-md-12 panel panel-default">
                        <p>@comment.CommentBody</p>
                    </div>
                </div>
            </div>
        }
    </div>
    <div style="float: right; margin-top: 20px" class="col-md-3 ds">
        <h4 class="centered mt">Attachments</h4>

        @foreach (var attach in Model.TicketAttachments)
        {

            string icon = IconHelper.GetIcon(attach.FilePath);
            <a href="@(attach.FilePath)">
                <div class="desc">
                    <div class="thumb">
                        <span class="badge bg-theme"><i class="@(icon)"></i></span>
                    </div>
                    <div style="word-wrap: break-word;" class="details">
                        @Html.Raw(attach.FilePath.Replace("/Uploads/", ""))
                    </div>

                </div>
            </a>
        }
        <div style="margin-bottom: 20px">
            @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("TicketId", Model.Id)
                <div class="form-group">
                    @Html.Label("Description", htmlAttributes: new { @class = "control -label " })
                    @Html.TextArea("AttachDescription", new { @class = "comment" })
                    @Html.Label("Upload", htmlAttributes: new { @class = "control -label " })
                    <div>
                        <input name="image" type="file" id="fileUpload" style="word-wrap: break-word;"/>
                    </div>
                </div>
                <input type="submit" value="Create" class="btn btn-default" />
            }
        </div>
    </div>
</div>
      
<style>
    .comment {
        resize: none;
        overflow: visible;
        height: 5vh;
        width: 100%;
    }

    .form {
        display: flex;
        justify-content: flex-start
    }
</style>


@section scripts{
    <script>
        //$(".pastcomments").hide()
        $("#showcom").show()
        $("#showcom").click(() => {
            $(".pastcomments").toggle()
            $("#showcom").hide();
        })
        $(".comment").autogrow();
        $("#cancel").click(function (e) {
            e.preventDefault();
            $("#txtarea").val("")
        })
    </script>}

